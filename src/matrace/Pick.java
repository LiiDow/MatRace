/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package matrace;

import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import matrace.MainGame;

/**
 *
 * @author Reda ben
 */
public class Pick extends javax.swing.JFrame {

    /**
     * Creates new form Start
     */
    Timer timer;
    int id_player = 1;
    public Pick() {
        
        try {
            initComponents();
            c= new Connection();
            getPlayers();
            id_player = player();
            selected = 0;
            Statement st = c.con.createStatement();
            String S;
            ResultSet r ;
            if(countplayers == 0){
                 jLabel6.setVisible(false);
            }else{
                S = "SELECT * from player where id_player = " + players[selected][0];
                r = st.executeQuery(S);
                r.next();       
                jLabel8.setText(r.getString("Name"));
                jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recources/"+players[0][1]+"B.png")));  
            }
            S = "SELECT * from player where id_player = " + id_player;
            r = st.executeQuery(S);
            r.next();
            jLabel10.setText(r.getString("name"));
        } catch (SQLException ex) {
            Logger.getLogger(Pick.class.getName()).log(Level.SEVERE, null, ex);
        }
        timer = new Timer();
        timer.schedule(new RemindTask(), 0, //initial delay
                1 * 1000);  
    }
    class RemindTask extends TimerTask {

        public void run() {
            getPlayers();
            check();
    }}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel11 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(860, 500));
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setBackground(new java.awt.Color(255, 153, 0));
        jLabel11.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("No Player Found ! Please Wait");
        jLabel11.setToolTipText("");
        jLabel11.setOpaque(true);
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 610, 320));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recources/1B.png"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(354, 126, 140, 115));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/matrace/left.png"))); // NOI18N
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 170, 30, 30));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/matrace/right.png"))); // NOI18N
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 170, 30, 30));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/matrace/Begin.png"))); // NOI18N
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel4MouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel4MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel4MouseReleased(evt);
            }
        });
        jLabel4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel4KeyPressed(evt);
            }
        });
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 326, -1, 50));

        jLabel5.setFont(new java.awt.Font("Elkwood", 0, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(27, 27, 27));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("X");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 10, 30, 40));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Chose A player");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 90, 210, 40));

        jLabel8.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("jLabel8");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(313, 270, 220, 40));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("ACCEPT");
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel9.setOpaque(true);
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 410, 260, 50));

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setOpaque(true);
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 160, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/matrace/StartBg.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseEntered
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/matrace/BeginH.png"))); // NOI18N
    }//GEN-LAST:event_jLabel4MouseEntered

    private void jLabel4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseExited
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/matrace/Begin.png"))); // NOI18N
    }//GEN-LAST:event_jLabel4MouseExited

    private void jLabel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MousePressed

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/matrace/BeginP.png"))); // NOI18N
        
    }//GEN-LAST:event_jLabel4MousePressed

    private void jLabel4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseReleased
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/matrace/BeginH.png"))); // NOI18N
    }//GEN-LAST:event_jLabel4MouseReleased

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setLocation(Toolkit.getDefaultToolkit().getScreenSize().width / 2 - 430, Toolkit.getDefaultToolkit().getScreenSize().height / 2 - 250);
        jLabel9.setVisible(false);
    }//GEN-LAST:event_formWindowOpened

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel4KeyPressed

    }//GEN-LAST:event_jLabel4KeyPressed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        try {
            if(selected < players.length-1) selected ++;
            else selected = 0;
            jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recources/"+players[selected][1]+"B.png")));
            Statement st = c.con.createStatement();
            String S = "SELECT * from player where id_player = " + players[selected][0];
            ResultSet r = st.executeQuery(S);
            r.next();       
            jLabel8.setText(r.getString("Name"));
        } catch (SQLException ex) {
            Logger.getLogger(Pick.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        try {
            if(selected > 0) selected --;
            else selected = players.length-1;
            Statement st = c.con.createStatement();
            jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recources/"+players[selected][1]+"B.png")));
            String S = "SELECT * from player where id_player = " + players[selected][0];
            ResultSet r = st.executeQuery(S);
            r.next();       
            jLabel8.setText(r.getString("Name"));
        } catch (SQLException ex) {
            Logger.getLogger(Pick.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jLabel2MouseClicked
    int countplayers,jjj=0;
    public void getPlayers(){
       try {
            Statement st = c.con.createStatement();
            String S = "SELECT count(*) as c from player where online = 0";
            ResultSet r = st.executeQuery(S);
            r.next();
            int i = r.getInt("c");
            countplayers = i;
            if(countplayers == 0) jLabel11.setVisible(true);
            else {
                if(jjj == 0){
                    jLabel11.setVisible(false);
                     jjj++;
                }else{
                S = "SELECT * from player where id_player = " + players[selected][0];
                r = st.executeQuery(S);
                r.next();       
                jLabel8.setText(r.getString("Name"));
                jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recources/"+players[0][1]+"B.png"))); 
                }
                        
            }
            jLabel6.setVisible(true);
            players = new int[i][2];
            S = "SELECT * from player where online = 0 and id_player != " + id_player;
            r = st.executeQuery(S);
            int j = 0;
            while(r.next()){
                players[j][1] = r.getInt("avatar");
                players[j][0] = r.getInt("id_player");
                j++;
                //
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Pick.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        try {
           
            Statement st = c.con.createStatement();
            st.executeUpdate("INSERT into game (idp1,idp2) values("+ id_player +","+players[selected][0]+")");
            ResultSet rs = st.executeQuery("select last_insert_id() as last_id from game");
            rs.next();
            String s = rs.getString("last_id");
            st.executeUpdate("update player set id_game = "+ Integer.parseInt(s) + " where id_player = "+id_player);
             registerGame(0,Integer.parseInt(s));
            this.dispose();
            new Accept().setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Pick.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        try {
            Statement st = c.con.createStatement();
            ResultSet rs = st.executeQuery("SELECT id from game where idp2 = " + id_player );
            rs.next();
            st.executeUpdate("update player set id_game = "+ rs.getInt("id") + " where id_player = "+id_player);
            ResultSet idg = st.executeQuery("SELECT id_game from player where id_player = " + id_player );
            idg.next();
            int idgame = idg.getInt("id_game");
            st.executeUpdate("update game set accepted = 1  where id = "+ idgame);
            registerGame(1,idgame);
            st.executeUpdate("update player set x=6,y=5,online=1 where id_player = "+id_player);
            this.dispose();
            new MainGame().setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Pick.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel9MouseClicked
    String PlayerName;
    public void  check(){
        try {
            Statement st = c.con.createStatement();
            String s = "SELECT * from game where idp2 = " + id_player + " and accepted = 0";
            ResultSet r = st.executeQuery(s);
            if(r.next()) jLabel9.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Pick.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    public int player(){
     int id = 1;
        try{
            FileReader getNameP;
            getNameP = new FileReader("player.txt");
            BufferedReader br = new BufferedReader(getNameP);
            PlayerName = br.readLine();
            getNameP.close();
            Statement st = c.con.createStatement();
            String S = "SELECT * from player where name = '" + PlayerName + "'";
            ResultSet r =  st.executeQuery(S);
            r.next();
            id = r.getInt("id_player");
     }catch (FileNotFoundException ex) {
            Logger.getLogger(MainGame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainGame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Pick.class.getName()).log(Level.SEVERE, null, ex);
        }
        return id;
             
 }
  
private void registerGame(int accepted , int game) {
        try {
            FileWriter fw = new FileWriter("game.txt");
            try (PrintWriter pw = new PrintWriter(fw)) {
                pw.print(accepted +" " + game);
            }
        } catch (IOException ex) {
            System.out.println("Error");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pick.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pick.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pick.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pick.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pick().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
    Connection c;
    int players[][];
    int selected;
}
