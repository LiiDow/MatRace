/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package matrace;

import AppPackage.AnimationClass;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import static java.lang.Integer.parseInt;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Reda ben
 */
public final class MainGame extends javax.swing.JFrame {

    int gameId = 1;
    Timer timer;
    int i = 0;
    boolean owner = false;
    String PlayerName = "";

    public MainGame() {
        try {
            cc = new Connection();
            c = new AnimationClass();
            initComponents();
            intArray();
            player();
            loadPlayers();
            getGame();
            timer = new Timer();
            timer.schedule(new RemindTask(), 0, 1 * 25);
        } catch (SQLException ex) {
            Logger.getLogger(MainGame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    class RemindTask extends TimerTask {

        public void run() {
            if (i % 400 == 0) {
                bonus[0] = (int) (Math.random() * 5);
                bonus[1] = (int) (Math.random() * 6);
                while (bonus[0] == p.x && bonus[1] == p.y) {
                    bonus[0] = (int) (Math.random() * 5);
                    bonus[1] = (int) (Math.random() * 6);
                }
                jLabel6.setLocation(tab[bonus[1]][bonus[1]][1], tab[bonus[0]][bonus[1]][0]);
            }
            if (i > 3) {
                jLabel5.setLocation(tab[p.x][p.y][1], tab[p.x][p.y][0]);
                down.setLocation(tab[p.x][p.y][1], tab[p.x][p.y][0] + 52);
                right.setLocation(tab[p.x][p.y][1] + 52, tab[p.x][p.y][0] + 10);
                up.setLocation(tab[p.x][p.y][1], tab[p.x][p.y][0] - 35);
                left.setLocation(tab[p.x][p.y][1] - 52, tab[p.x][p.y][0] + 10);
                jLabel6.setLocation(tab[bonus[0]][bonus[1]][1], tab[bonus[0]][bonus[1]][0]);
                loadLocation();
            }
            i++;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        down = new javax.swing.JLabel();
        right = new javax.swing.JLabel();
        up = new javax.swing.JLabel();
        left = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(860, 500));
        setMinimumSize(new java.awt.Dimension(860, 500));
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField1.setBackground(new java.awt.Color(248, 148, 6));
        jTextField1.setFont(new java.awt.Font("Arial", 0, 30)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setBorder(null);
        jTextField1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 450, 150, 30));

        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel2MouseReleased(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 440, 50, 50));

        jLabel3.setFont(new java.awt.Font("Elkwood", 0, 36)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("0");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(763, 190, 80, 40));

        jLabel4.setFont(new java.awt.Font("Elkwood", 0, 36)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Name");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 140, 130, 40));

        jLabel5.setBackground(new java.awt.Color(102, 102, 102));
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recources/1S.png"))); // NOI18N
        jLabel5.setToolTipText("");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 40, 40));

        down.setBackground(new java.awt.Color(255, 255, 255));
        down.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        down.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        down.setToolTipText("");
        down.setOpaque(true);
        getContentPane().add(down, new org.netbeans.lib.awtextra.AbsoluteConstraints(-13, 30, 40, 20));

        right.setBackground(new java.awt.Color(255, 255, 255));
        right.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        right.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        right.setToolTipText("");
        right.setOpaque(true);
        getContentPane().add(right, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 10, 40, 20));

        up.setBackground(new java.awt.Color(255, 255, 255));
        up.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        up.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        up.setToolTipText("");
        up.setOpaque(true);
        getContentPane().add(up, new org.netbeans.lib.awtextra.AbsoluteConstraints(67, 30, 40, 20));

        left.setBackground(new java.awt.Color(255, 255, 255));
        left.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        left.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        left.setToolTipText("");
        left.setOpaque(true);
        getContentPane().add(left, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 60, 40, 20));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recources/D.png"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, 40, 40));

        jLabel8.setFont(new java.awt.Font("Elkwood", 0, 36)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("0");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(709, 180, 50, 40));

        jLabel7.setFont(new java.awt.Font("Elkwood", 0, 36)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Name");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 240, 130, 40));

        jLabel9.setFont(new java.awt.Font("Elkwood", 0, 36)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("0");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 280, 50, 40));

        jLabel10.setFont(new java.awt.Font("Elkwood", 0, 36)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("0");
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 290, 80, 40));

        jLabel11.setBackground(new java.awt.Color(255, 102, 0));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recources/1S.png"))); // NOI18N
        jLabel11.setToolTipText("");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 180, 40, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/matrace/GameBg.png"))); // NOI18N
        jLabel1.setToolTipText("");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel2MousePressed

    private void jLabel2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseReleased
        try {
            Statement st = cc.con.createStatement();
            String sql = "update player set online=0 where name = '" + PlayerName + "'";
            st.executeUpdate(sql);
            System.exit(0);
        } catch (SQLException ex) {
            Logger.getLogger(MainGame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel2MouseReleased
    public void loadPlayers() {
        try {
            Statement st = cc.con.createStatement();
            String sql = "SELECT * from player where name = '" + PlayerName + "'";
            ResultSet rs = st.executeQuery(sql);
            rs.next();
            p = new Player(rs.getInt("x"), rs.getInt("y"), rs.getInt("score"), rs.getInt("avatar"), rs.getString("name"));
            sql = "SELECT * from player where id_player !=" + rs.getInt("id_player") + " and id_game = " + gameId;
            rs = st.executeQuery(sql);
            rs.next();
            p1 = new Player(rs.getInt("x"), rs.getInt("y"), rs.getInt("score"), rs.getInt("avatar"), rs.getString("name"));
        } catch (SQLException ex) {
            Logger.getLogger(MainGame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void loadLocation() {
        try {
            Statement st = cc.con.createStatement();
            String sql = "SELECT * from player where name = '" + p.name + "'";
            ResultSet rs = st.executeQuery(sql);
            rs.next();
            p1.score = rs.getInt("score");
            p1.x = rs.getInt("x");
            p1.y = rs.getInt("y");
            jLabel5.setLocation(tab[p.x][p.y][1], tab[p.x][p.y][0]);
            jLabel3.setText(p.score + "");
            sql = "SELECT * from player where name = '" + p1.name + "'";
            rs = st.executeQuery(sql);
            rs.next();
            p1.score = rs.getInt("score");
            p1.x = rs.getInt("x");
            p1.y = rs.getInt("y");
            jLabel11.setLocation(tab[p1.x][p1.y][1], tab[p1.x][p1.y][0]);
            jLabel10.setText(p1.score + "");
        } catch (SQLException ex) {
            Logger.getLogger(MainGame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setLocation(Toolkit.getDefaultToolkit().getScreenSize().width / 2 - 430, Toolkit.getDefaultToolkit().getScreenSize().height / 2 - 250);
        intArray();
        c = new AnimationClass();
        loadPlayers();
        jLabel4.setText(PlayerName);
        jLabel7.setText(p1.name);
        down.setText(Op.getOp());
        right.setText(Op.getOp());
        up.setText(Op.getOp());
        left.setText(Op.getOp());
        bonus[0] = (int) (Math.random() * 5);
        bonus[1] = (int) (Math.random() * 6);
        while (bonus[0] == p.x && bonus[1] == p.y) {
            bonus[0] = (int) (Math.random() * 5);
            bonus[1] = (int) (Math.random() * 6);
        }
        jLabel6.setLocation(tab[bonus[0]][bonus[1]][1], tab[bonus[0]][bonus[1]][0]);
        hide();
    }//GEN-LAST:event_formWindowOpened

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        intArray();
    }//GEN-LAST:event_jLabel3MouseClicked
    public void init() {

    }
    boolean t = false;
    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                int a = Integer.parseInt(jTextField1.getText());
                if (a == Op.getRes(down.getText())) {
                    p.score += Op.getRes(down.getText());
                    movePlayer("down");
                } else if (a == Op.getRes(right.getText())) {
                    p.score += Op.getRes(right.getText());
                    movePlayer("right");
                } else if (a == Op.getRes(left.getText())) {
                    movePlayer("left");
                    p.score += Op.getRes(left.getText());
                } else if (a == Op.getRes(up.getText())) {
                    movePlayer("up");
                    p.score += Op.getRes(up.getText());
                } else {
                    p.score -= 20;
                }
                jTextField1.setText("");
                hide();
            }
            if (tab[p.x][p.y][1] == jLabel6.getLocation().x && tab[p.x][p.y][0] == jLabel6.getLocation().y) {
                p.score += 100;
                bonus[0] = (int) (Math.random() * 5);
                bonus[1] = (int) (Math.random() * 6);
                p.stars++;
                jLabel8.setText(p.stars + "");
            }
            jLabel3.setText(p.score + "");
            Statement st = cc.con.createStatement();
            String sql = "Update player set x= " + p.x + ",y=" + p.y + ",score =" + p.score + " where name = '" + PlayerName + "'";
            st.executeUpdate(sql);
        } catch (SQLException ex) {
            Logger.getLogger(MainGame.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased

    }//GEN-LAST:event_jTextField1KeyReleased

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel10MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGame().setVisible(true);
            }
        });
    }

    public void intArray() {
        for (int i = 0; i < tab.length; i++) {
            for (int j = 0; j < tab[i].length; j++) {
                tab[i][j][0] = 20 + j * 80;
                tab[i][j][1] = 27 + i * 100;

            }
        }
    }

    public void hide() {
        down.setVisible(true);
        right.setVisible(true);
        up.setVisible(true);
        left.setVisible(true);

        if (p.x == 0) {
            left.setVisible(false);
        }
        if (p.x == 6) {
            right.setVisible(false);
        }
        if (p.y == 0) {
            up.setVisible(false);
        }
        if (p.y == 5) {
            down.setVisible(false);
        }
    }

    public void movePlayer(String where) {
        if (where.equals("up")) {
            if (jLabel5.getLocation().y > 30) {
                //c.jLabelYUp(jLabel5.getLocation().y,tab[p.x][p.y-1][0], 1, 2, jLabel5);
                jLabel5.setLocation(jLabel5.getLocation().x, tab[p.x][p.y - 1][0]);
                p.y--;
            }
        }
        if (where.equals("down")) {
            if (jLabel5.getLocation().y < 420) {
                //c.jLabelYDown(jLabel5.getLocation().y,tab[p.x][p.y+1][0], 1, 2, jLabel5);
                jLabel5.setLocation(jLabel5.getLocation().x, tab[p.x][p.y + 1][0]);
                p.y++;
            }
        }
        if (where.equals("left")) {
            if (jLabel5.getLocation().x > 27) {
                //c.jLabelXLeft(jLabel5.getLocation().x,tab[p.x-1][p.y][1], 1, 2, jLabel5);
                jLabel5.setLocation(tab[p.x - 1][p.y][1], jLabel5.getLocation().y);
                p.x--;
            }
        }
        if (where.equals("right")) {
            if (jLabel5.getLocation().x < 626) {
                //c.jLabelXRight(jLabel5.getLocation().x,tab[p.x+1][p.y][1], 1, 2, jLabel5);
                jLabel5.setLocation(tab[p.x + 1][p.y][1], jLabel5.getLocation().y);
                p.x++;
            }
        }
        down.setLocation(tab[p.x][p.y][1], tab[p.x][p.y][0] + 52);
        right.setLocation(tab[p.x][p.y][1] + 52, tab[p.x][p.y][0] + 10);
        up.setLocation(tab[p.x][p.y][1], tab[p.x][p.y][0] - 52);
        left.setLocation(tab[p.x][p.y][1] - 52, tab[p.x][p.y][0] + 10);
        down.setText(Op.getOp());
        right.setText(Op.getOp());
        up.setText(Op.getOp());
        left.setText(Op.getOp());
    }

    public void generateOp() {
        down.setText(Op.getOp());
        right.setText(Op.getOp());
        up.setText(Op.getOp());
        left.setText(Op.getOp());
    }

    public void player() {
        try {
            FileReader getNameP;
            getNameP = new FileReader("player.txt");
            BufferedReader br = new BufferedReader(getNameP);
            PlayerName = br.readLine();
            getNameP.close();
            System.out.println(PlayerName);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainGame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainGame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void getGame() {
        try {
            int i = 1;
            FileReader getNameP;
            getNameP = new FileReader("game.txt");
            BufferedReader br = new BufferedReader(getNameP);
            String line = br.readLine();
            int b = line.length();
            gameId = parseInt(line.substring(2, b));
            if (line.substring(0, 1).equalsIgnoreCase("0")) {
                owner = false;
            } else {
                owner = true;
            }
            System.out.println(gameId + " " + owner);
            getNameP.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainGame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainGame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel down;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel left;
    private javax.swing.JLabel right;
    private javax.swing.JLabel up;
    // End of variables declaration//GEN-END:variables
    public int tab[][][] = new int[7][6][2];
    AnimationClass c;
    Player p;
    Player p1;
    int bonus[] = new int[2];
    Connection cc;
}
